"use strict";(self.webpackChunkrobin_sills_gerrish=self.webpackChunkrobin_sills_gerrish||[]).push([[778],{514:(e,t,n)=>{n.d(t,{ZP:()=>o,T5:()=>d,si:()=>c,Wp:()=>s,ii:()=>r});var i=n(337);let a=10;function o(){const e=document.querySelector("#contact-container");e&&("visible"===e.style.visibility?e.style.visibility="hidden":e.style.visibility="visible")}function s(){const e=document.querySelector("#resume-body"),t=document.querySelector("header"),n=document.querySelector("#header-logo");e&&(e.remove(),n.style.visibility="visible",t.after((()=>{const e=document.createElement("div"),t=document.createElement("div");return e.id="portfolio-body",t.id="port-grid",[{name:"Memory Card Game",url:"https://rsgerrish.github.io/memory-card-game/",git:"https://github.com/RSGerrish/memory-card-game",description:"This is a Thundercats themed card game I did as an assignment to help in the process of learning how state and hooks work in React. I was able to get 90% of this done on my own, however I struggled when I managed to change state incorrectly and get myself caught in a difficult-to-debug render loop. I eventually had to check in on an example to understand where I was going wrong. In the end, I left with a fairly good grasp of using hooks and when and when to change state. I am also extremely pleased with the aesthetic of this project.",directions:"Click all of the characters without clicking any of them more than once. Each click will shuffle the group. Game resets when a character has been clicked for the second time and is subtly indicated by the score keeping."},{name:"TDD Exercise",url:"https://github.com/RSGerrish/tdd-practice",git:"https://github.com/RSGerrish/tdd-practice",description:"An exercise in using Jest and taking advantage of Test Driven Development. While I have found this to be tedious and counter intuitive for the size of projects I have worked on myself, I certainly see its advantage when working on larger projects as well as with a team.",directions:"Please Note: No UI was created for this project and all debugging was done within the IDE using tests."},{name:"Chek List",url:"https://rsgerrish.github.io/todo-project/",git:"https://github.com/RSGerrish/todo-project",description:"A To Do List App. I had a really good time with this one as I managed to get it all done with minimal help from examples and mostly from my own research and problem solving. The palette is crap, however I am proud of the layout and overall design. I will be revisiting this to add a firebase datase allowing for persistence between sessions. I will also be updating the palette.",directions:"Just like the other million todo apps aspiring web developers have done, you can add a project on the left, and then add tasks for projects."},{name:"Mamas Pizza",url:"https://rsgerrish.github.io/restaurant-project/",git:"https://github.com/RSGerrish/restaurant-project",description:"This was an early project I worked on, however I believe its purpose was to get me familiar with Webpack which is currently part of my preferred technology stack, as long as it makes sense of course. The assignment was to create a fake restaurant website, however I redesigned a website for a pizza shop owned by a friend. You can check out their current site at https://originalmamaspizza.com/. Who knows, maybe this project will become a paid gig someday!",directions:"This site is not fully responsive and the layout breaks at smaller resolutions. I plan to revisit this one to make a mobile layout of the site which will be displayed via Javascript when the apps width goes below a certain width."},{name:"Weather App",url:"https://rsgerrish.github.io/weather-app/",git:"https://github.com/RSGerrish/weather-app",description:"The purpose of this project was to get familiar using an API, promises and async/await functions. Specifically, I used the OpenWeather API to retrieve and display current weather info.",directions:"I reluctantly put this on my Portfolio, but only because I am not sure how the sunrise and sunset times will display for anyone outside of the US Eastern timezone. While I could certainly work this issue out, I did not want to get bogged down with a detail that really wasn't the focus of the exercise."}].forEach((e=>{const n=document.createElement("a"),i=document.createElement("div"),a=document.createElement("div"),o=document.createElement("div"),s=document.createElement("a"),r=document.createElement("div"),c=document.createElement("div");n.href=e.url,i.className="port-card",i.id=e.git.substring(e.git.indexOf("RSGerrish/")+10,e.git.length),a.className="port-gradient",o.className="port-name",o.textContent=e.name,s.className="port-git",s.textContent="Check out the source on GitHub",s.href=e.git,r.className="port-desc",r.textContent=e.description,c.className="port-directions",c.textContent=e.directions,a.append(o,s,r,c),i.appendChild(a),n.appendChild(i),t.appendChild(n)})),e.appendChild(t),e})()))}function r(){const e=document.querySelector("#portfolio-body"),t=document.querySelector("header"),n=document.querySelector("#header-logo");e&&(e.remove(),n.style.visibility="hidden",t.after((0,i.Z)()))}function c(){if(window.innerWidth<720&&3!=a){const e=document.querySelectorAll("#skills-wrapper>div");e[5].remove(),e[11].remove()}else if(window.innerWidth>=720&&3===a){const e=document.querySelector("#skills-wrapper"),t=document.querySelector("#skill-3"),n=document.querySelector("#skill-6"),i=document.createElement("div"),a=document.createElement("div");i.textContent="•",a.textContent="•",e.insertBefore(i,t),e.insertBefore(a,n)}window.innerWidth>1165?a=10:window.innerWidth<1165&&window.innerWidth>=720?a=7:window.innerWidth<720&&(a=3)}function d(){if(window.innerWidth<720){const e=document.querySelectorAll("#skills-wrapper>div");e[5].remove(),e[11].remove()}else if(window.innerWidth>=720&&window.innerWidth<1155){const e=document.querySelector("#skills-wrapper"),t=document.querySelector("#skill-3"),n=document.querySelector("#skill-6"),i=document.createElement("div"),a=document.createElement("div");i.textContent="•",a.textContent="•",e.insertBefore(i,t),e.insertBefore(a,n)}}},337:(e,t,n)=>{n.d(t,{Z:()=>o});const i=(e,t,n,i)=>{const a=document.createElement("div"),o=document.createElement("div"),s=document.createElement("div"),r=document.createElement("div");if(o.textContent=e,s.textContent=t,r.textContent=n,o.className="section-opener",s.className="section-header",r.className="date-range",a.className="edex-section",a.append(o,s,r),i){const e=document.createElement("div");e.textContent=i,e.className="section-description",a.appendChild(e)}return a},a=(e,t,n,i)=>{const a=document.createElement("div"),o=document.createElement("div"),s=document.createElement("div"),r=document.createElement("div"),c=document.createElement("div");return o.textContent=e,s.textContent=t,r.textContent=n,c.textContent=i,o.className="section-opener",s.className="section-header",r.className="date-range",c.className="section-description",a.className="edex-section",a.append(o,s,r,c),a},o=()=>{const e=document.createElement("div");return e.id="resume-body",e.appendChild(((e,t,n,i,a)=>{const o=document.createElement("div"),s=document.createElement("div"),r=document.createElement("div"),c=document.createElement("div"),d=document.createElement("div"),l=document.createElement("div"),m=document.createElement("div"),u=document.createElement("a"),p=document.createElement("a"),h=document.createElement("a"),g=document.createElement("a");return u.className="res-link",u.href="mailto:robin@RobinSillsGerrish.com",p.className="res-link",p.href="tel:16104136063",h.className="res-link",h.href="https://github.com/RSGerrish",g.className="res-link",g.href="https://linkedin.com/in/robingerrish",o.id="head-container",s.id="user-name",r.id="info-container",c.className="info-element",d.className="info-element",l.className="info-element",m.className="info-element",s.textContent=e,c.textContent=t,d.textContent=n,l.textContent=i,m.textContent=a,u.appendChild(c),p.appendChild(d),h.appendChild(l),g.appendChild(m),r.append(u,p,h,g),o.append(s,r),o})("Robin Gerrish","robin@RobinSillsGerrish.com","610-413-6063","https://github.com/RSGerrish","https://linkedin.com/in/robingerrish")),e.appendChild(((e,t,n,i)=>{const a=document.createElement("div"),o=document.createElement("div"),s=document.createElement("ul"),r=document.createElement("li"),c=document.createElement("li"),d=document.createElement("li"),l=document.createElement("li");return a.id="summary-container",o.textContent="Summary",o.id="summary-title",o.className="section-title",r.textContent=e,r.className="sum-item",c.textContent=t,c.className="sum-item",d.textContent=n,d.className="sum-item",l.textContent=i,l.className="sum-item",s.append(r,c,d,l),a.append(o,s),a})("Composite Engineer from the racing, aerospace and defense industries with strong desire to pursue a career in software or web development","Developed key general skills in past positions  such as management, customer service, strong communication and logical problem solving","Web Developer trained in HTML5, CSS3 and Javascript","Additional experience in GitHub, Webpack with various plugins and SQL")),e.appendChild((e=>{const t=document.createElement("div"),n=document.createElement("div"),i=document.createElement("div"),a=document.createElement("div");return t.id="skills-container",n.className="section-title",n.id="skills-title",n.textContent="Skills",e.forEach(((t,n)=>{const a=document.createElement("div");if(a.textContent=t,a.id=`skill-${n}`,n<e.length-1){const e=document.createElement("div");e.textContent="•",e.id=`sep-${n}`,i.append(a,e)}else i.appendChild(a)})),i.id="skills-wrapper",a.appendChild(i),a.id="skills-position",t.append(n,a),t})(["Full-Stack Development","Webpack","Github","Node.js","Express.js","React.js","jQuery","PHP","SQL"])),e.appendChild(((e,t)=>{const n=document.createElement("div"),a=document.createElement("div");return a.textContent="Education",a.className="section-title",n.id="education-container",n.appendChild(a),n.appendChild(i(e.sname,e.dname,e.dates,e.desc)),n.appendChild(i(t.sname,t.dname,t.dates,t.desc)),n})({sname:"The Odin Project",dname:"Certificate, Full Stack Web Development",dates:"Apr 2022 - Jun 2022",desc:"TheOdinProject.com - The Odin Project provides a free open source coding curriculum that can be taken entirely online. The curriculum is meticulously curated to ensure the content is up-to-date by a team of dedicated volunteers."},{sname:"Reading Area Community College",dname:"Associate of Business Management",dates:"Graduated June 2012"})),e.appendChild(((e,t,n,i)=>{const o=document.createElement("div"),s=document.createElement("div");return s.textContent="Experience",s.className="section-title",o.appendChild(s),o.appendChild(a(e.pname,e.cname,e.dates,e.desc)),o.appendChild(a(t.pname,t.cname,t.dates,t.desc)),o.appendChild(a(n.pname,n.cname,n.dates,n.desc)),o.appendChild(a(i.pname,i.cname,i.dates,i.desc)),o})({pname:"Composite Fabricator",cname:"Composite Resources",dates:"Jan 2021 - Mar 2022",desc:"Responsibilities include composite fabrication, manual machining, and handling occasional research and development projects"},{pname:"Inventory Manager",cname:"Multimatic Inc.",dates:"May 2019 - May 2020",desc:"Responsibilities include customer support, inventory management of all in-house GT3 and GT4 OEM parts for the US customer suppport program, and occasional travel to race events"},{pname:"Project Engineer",cname:"Composite Resources",dates:"May 2018 - May 2019",desc:"Project Engineer with focus in quoting potential work and designing composite parts"},{pname:"Purchaser",cname:"Riley Technologies",dates:"Dec 2016 - May 2018",desc:"Responsibilities include but are not limited to sourcing materials, creating and submitting purchase orders, receiving inventory, maintaining inventory, creating and editing BOM's and occasionaly traveling to race events"})),e}}},e=>{e(e.s=514)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFBa0JvRSxFQUFLSyxNQUFPTCxFQUFLTSxNQUFPTixFQUFLbkQsTUFBT21ELEVBQUtsRCxPQUNyRnFELEVBQWN2RSxZQUFZLEVBQWtCcUUsRUFBS0ksTUFBT0osRUFBS0ssTUFBT0wsRUFBS3BELE1BQU9vRCxFQUFLbkQsT0FDckZxRCxFQUFjdkUsWUFBWSxFQUFrQnNFLEVBQUtHLE1BQU9ILEVBQUtJLE1BQU9KLEVBQUtyRCxNQUFPcUQsRUFBS3BELE9BRTlFcUQsR0pzRGUsQ0FwQ0YsQ0FDbEJFLE1BQU8sdUJBQ1BDLE1BQU8sc0JBQ1B6RCxNQUFPLHNCQUNQQyxLQUFNLCtIQUdZLENBQ2xCdUQsTUFBTyxvQkFDUEMsTUFBTyxrQkFDUHpELE1BQU8sc0JBQ1BDLEtBQU0sb0xBR1ksQ0FDbEJ1RCxNQUFPLG1CQUNQQyxNQUFPLHNCQUNQekQsTUFBTyxzQkFDUEMsS0FBTSx1RkFHWSxDQUNsQnVELE1BQU8sWUFDUEMsTUFBTyxxQkFDUHpELE1BQU8sc0JBQ1BDLEtBQU0sa09BWURTLEsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yb2Jpbi1zaWxscy1nZXJyaXNoLy4vc3JjL2NvbXBvbmVudHMvZnVuY3Rpb25zLmpzIiwid2VicGFjazovL3JvYmluLXNpbGxzLWdlcnJpc2gvLi9zcmMvY29tcG9uZW50cy9wb3J0Zm9saW8uanMiLCJ3ZWJwYWNrOi8vcm9iaW4tc2lsbHMtZ2VycmlzaC8uL3NyYy9jb21wb25lbnRzL3Jlcy1oZWFkLmpzIiwid2VicGFjazovL3JvYmluLXNpbGxzLWdlcnJpc2gvLi9zcmMvY29tcG9uZW50cy9lZHUtd3JhcHBlci5qcyIsIndlYnBhY2s6Ly9yb2Jpbi1zaWxscy1nZXJyaXNoLy4vc3JjL2NvbXBvbmVudHMvZXhwLXdyYXBwZXIuanMiLCJ3ZWJwYWNrOi8vcm9iaW4tc2lsbHMtZ2VycmlzaC8uL3NyYy9jb21wb25lbnRzL3Jlc3VtZS5qcyIsIndlYnBhY2s6Ly9yb2Jpbi1zaWxscy1nZXJyaXNoLy4vc3JjL2NvbXBvbmVudHMvcmVzLXN1bW1hcnkuanMiLCJ3ZWJwYWNrOi8vcm9iaW4tc2lsbHMtZ2VycmlzaC8uL3NyYy9jb21wb25lbnRzL3Jlcy1za2lsbHMuanMiLCJ3ZWJwYWNrOi8vcm9iaW4tc2lsbHMtZ2VycmlzaC8uL3NyYy9jb21wb25lbnRzL3Jlcy1lZHVjYXRpb24uanMiLCJ3ZWJwYWNrOi8vcm9iaW4tc2lsbHMtZ2VycmlzaC8uL3NyYy9jb21wb25lbnRzL3Jlcy1leHBlcmllbmNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQb3J0Zm9saW8gZnJvbSAnLi9wb3J0Zm9saW8uanMnO1xuaW1wb3J0IFJlc3VtZSBmcm9tICcuL3Jlc3VtZS5qcyc7XG5cbmxldCBzaXplU3RhdGUgPSAxMDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdG9nZ2xlQ29udGFjdCAoKSB7XG4gIGNvbnN0IGNvbnRhY3RFbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY29udGFjdC1jb250YWluZXInKTtcblxuICBpZihjb250YWN0RWxlKSB7XG4gICAgaWYoY29udGFjdEVsZS5zdHlsZS52aXNpYmlsaXR5ID09PSBcInZpc2libGVcIikge1xuICAgICAgY29udGFjdEVsZS5zdHlsZS52aXNpYmlsaXR5ID0gXCJoaWRkZW5cIjtcbiAgICB9IGVsc2Uge1xuICAgICAgY29udGFjdEVsZS5zdHlsZS52aXNpYmlsaXR5ID0gXCJ2aXNpYmxlXCI7XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gc2hvd1BvcnRmb2xpbyAoKSB7XG4gIGNvbnN0IHJlc3VtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNyZXN1bWUtYm9keScpO1xuICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoZWFkZXInKTtcbiAgY29uc3QgaGVhZGVyTG9nbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNoZWFkZXItbG9nbycpO1xuXG4gIGlmIChyZXN1bWUpIHtcbiAgICByZXN1bWUucmVtb3ZlKCk7XG4gICAgaGVhZGVyTG9nby5zdHlsZS52aXNpYmlsaXR5ID0gXCJ2aXNpYmxlXCI7XG4gICAgaGVhZGVyLmFmdGVyKFBvcnRmb2xpbygpKTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNob3dSZXN1bWUgKCkge1xuICBjb25zdCBwb3J0Zm9saW8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcG9ydGZvbGlvLWJvZHknKTtcbiAgY29uc3QgaGVhZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaGVhZGVyJyk7XG4gIGNvbnN0IGhlYWRlckxvZ28gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaGVhZGVyLWxvZ28nKTtcblxuICBpZiAocG9ydGZvbGlvKSB7XG4gICAgcG9ydGZvbGlvLnJlbW92ZSgpO1xuICAgIGhlYWRlckxvZ28uc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XG4gICAgaGVhZGVyLmFmdGVyKFJlc3VtZSgpKTtcbiAgfVxufVxuLypcbkJlbG93IGZ1bmN0aW9uIGhhbmRsZXMgdGhlIHJlc3BvbnNpdmVuZXNzIG9mIHRoZSBzaXRlIGluIHJlbGF0aW9uIHRvIHRoZSBjdXJyZW50XG52aWV3cG9ydCB3aWR0aC4gQ3VycmVudGx5IG9ubHkgaGFuZGxlcyB0aGUgcmVzdW1lIHBhZ2UuIEkgd2lsbCBiZSBiYWNrIHRvIGdpdmUgdGhlXG5Qb3J0Zm9saW8gcGFnZSBzb21lIGxvdmUuIFRoaXMgZnVuY3Rpb24gc2hvdWxkIHJlYWxseSBiZSBicm9rZW4gZG93biBpbnRvIHNtYWxsZXIgXG5iaXRzIGZvciByZWFkYWJpbGl0eS5cbiovXG5leHBvcnQgZnVuY3Rpb24gcmVzaXplRXZlbnRMaXN0ZW5lcigpIHtcblxuICBpZiAod2luZG93LmlubmVyV2lkdGggPCA3MjAgJiYgc2l6ZVN0YXRlICE9IDMpIHtcbiAgICBjb25zdCBub2RlTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJyNza2lsbHMtd3JhcHBlcj5kaXYnKTtcblxuICAgIG5vZGVMaXN0WzVdLnJlbW92ZSgpO1xuICAgIG5vZGVMaXN0WzExXS5yZW1vdmUoKTtcbiAgfSBlbHNlIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA+PSA3MjAgJiYgc2l6ZVN0YXRlID09PSAzKSB7XG4gICAgY29uc3Qgc2tpbGxzV3JhcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNza2lsbHMtd3JhcHBlcicpO1xuICAgIGNvbnN0IHNraWxsMyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNza2lsbC0zJyk7XG4gICAgY29uc3Qgc2tpbGw2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NraWxsLTYnKTtcbiAgICBjb25zdCBidWxsZXQxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29uc3QgYnVsbGV0MiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gICAgYnVsbGV0MS50ZXh0Q29udGVudCA9IFwi4oCiXCI7XG4gICAgYnVsbGV0Mi50ZXh0Q29udGVudCA9IFwi4oCiXCI7XG5cbiAgICBza2lsbHNXcmFwcGVyLmluc2VydEJlZm9yZShidWxsZXQxLCBza2lsbDMpO1xuICAgIHNraWxsc1dyYXBwZXIuaW5zZXJ0QmVmb3JlKGJ1bGxldDIsIHNraWxsNik7XG4gIH1cblxuICAvL0hhbmRsZSBzaXplU3RhdGUgb25jZSBwZXIgcmVzaXplXG4gIHNldFNpemVTdGF0ZSgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5pdGlhbExvYWQoKSB7XG4gIC8vU2V0IG90aGVyIHZhcmlvdXMgbGF5b3V0IG9wdGlvbnMgZm9yIHNtYWxsZXIgdmlld3BvcnQgd2lkdGhzXG4gIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA8IDcyMCkge1xuICAgIGNvbnN0IG5vZGVMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI3NraWxscy13cmFwcGVyPmRpdicpO1xuXG4gICAgbm9kZUxpc3RbNV0ucmVtb3ZlKCk7XG4gICAgbm9kZUxpc3RbMTFdLnJlbW92ZSgpO1xuICB9IGVsc2UgaWYgKHdpbmRvdy5pbm5lcldpZHRoID49IDcyMCAmJiB3aW5kb3cuaW5uZXJXaWR0aCA8IDExNTUpIHtcbiAgICBjb25zdCBza2lsbHNXcmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NraWxscy13cmFwcGVyJyk7XG4gICAgY29uc3Qgc2tpbGwzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NraWxsLTMnKTtcbiAgICBjb25zdCBza2lsbDYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc2tpbGwtNicpO1xuICAgIGNvbnN0IGJ1bGxldDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb25zdCBidWxsZXQyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICBidWxsZXQxLnRleHRDb250ZW50ID0gXCLigKJcIjtcbiAgICBidWxsZXQyLnRleHRDb250ZW50ID0gXCLigKJcIjtcblxuICAgIHNraWxsc1dyYXBwZXIuaW5zZXJ0QmVmb3JlKGJ1bGxldDEsIHNraWxsMyk7XG4gICAgc2tpbGxzV3JhcHBlci5pbnNlcnRCZWZvcmUoYnVsbGV0Miwgc2tpbGw2KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzZXRTaXplU3RhdGUoKSB7XG4gIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA+IDExNjUpIHtcbiAgICBzaXplU3RhdGUgPSAxMDtcbiAgfSBlbHNlIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA8IDExNjUgJiYgd2luZG93LmlubmVyV2lkdGggPj0gNzIwKSB7XG4gICAgc2l6ZVN0YXRlID0gNztcbiAgfSBlbHNlIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA8IDcyMCkge1xuICAgIHNpemVTdGF0ZSA9IDM7XG4gIH1cbn0iLCJjb25zdCBQb3J0Zm9saW8gPSAoKSA9PiB7XG4gIGNvbnN0IHBvcnRmb2xpbyA9IFt7XG4gICAgICBuYW1lOiAnTWVtb3J5IENhcmQgR2FtZScsXG4gICAgICB1cmw6ICdodHRwczovL3JzZ2VycmlzaC5naXRodWIuaW8vbWVtb3J5LWNhcmQtZ2FtZS8nLFxuICAgICAgZ2l0OiAnaHR0cHM6Ly9naXRodWIuY29tL1JTR2VycmlzaC9tZW1vcnktY2FyZC1nYW1lJyxcbiAgICAgIGRlc2NyaXB0aW9uOiAnVGhpcyBpcyBhIFRodW5kZXJjYXRzIHRoZW1lZCBjYXJkIGdhbWUgSSBkaWQgYXMgYW4gYXNzaWdubWVudCB0byBoZWxwIGluIHRoZSBwcm9jZXNzIG9mIGxlYXJuaW5nIGhvdyBzdGF0ZSBhbmQgaG9va3Mgd29yayBpbiBSZWFjdC4gSSB3YXMgYWJsZSB0byBnZXQgOTAlIG9mIHRoaXMgZG9uZSBvbiBteSBvd24sIGhvd2V2ZXIgSSBzdHJ1Z2dsZWQgd2hlbiBJIG1hbmFnZWQgdG8gY2hhbmdlIHN0YXRlIGluY29ycmVjdGx5IGFuZCBnZXQgbXlzZWxmIGNhdWdodCBpbiBhIGRpZmZpY3VsdC10by1kZWJ1ZyByZW5kZXIgbG9vcC4gSSBldmVudHVhbGx5IGhhZCB0byBjaGVjayBpbiBvbiBhbiBleGFtcGxlIHRvIHVuZGVyc3RhbmQgd2hlcmUgSSB3YXMgZ29pbmcgd3JvbmcuIEluIHRoZSBlbmQsIEkgbGVmdCB3aXRoIGEgZmFpcmx5IGdvb2QgZ3Jhc3Agb2YgdXNpbmcgaG9va3MgYW5kIHdoZW4gYW5kIHdoZW4gdG8gY2hhbmdlIHN0YXRlLiBJIGFtIGFsc28gZXh0cmVtZWx5IHBsZWFzZWQgd2l0aCB0aGUgYWVzdGhldGljIG9mIHRoaXMgcHJvamVjdC4nLFxuICAgICAgZGlyZWN0aW9uczogJ0NsaWNrIGFsbCBvZiB0aGUgY2hhcmFjdGVycyB3aXRob3V0IGNsaWNraW5nIGFueSBvZiB0aGVtIG1vcmUgdGhhbiBvbmNlLiBFYWNoIGNsaWNrIHdpbGwgc2h1ZmZsZSB0aGUgZ3JvdXAuIEdhbWUgcmVzZXRzIHdoZW4gYSBjaGFyYWN0ZXIgaGFzIGJlZW4gY2xpY2tlZCBmb3IgdGhlIHNlY29uZCB0aW1lIGFuZCBpcyBzdWJ0bHkgaW5kaWNhdGVkIGJ5IHRoZSBzY29yZSBrZWVwaW5nLidcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6ICdUREQgRXhlcmNpc2UnLFxuICAgICAgdXJsOiAnaHR0cHM6Ly9naXRodWIuY29tL1JTR2VycmlzaC90ZGQtcHJhY3RpY2UnLFxuICAgICAgZ2l0OiAnaHR0cHM6Ly9naXRodWIuY29tL1JTR2VycmlzaC90ZGQtcHJhY3RpY2UnLFxuICAgICAgZGVzY3JpcHRpb246ICdBbiBleGVyY2lzZSBpbiB1c2luZyBKZXN0IGFuZCB0YWtpbmcgYWR2YW50YWdlIG9mIFRlc3QgRHJpdmVuIERldmVsb3BtZW50LiBXaGlsZSBJIGhhdmUgZm91bmQgdGhpcyB0byBiZSB0ZWRpb3VzIGFuZCBjb3VudGVyIGludHVpdGl2ZSBmb3IgdGhlIHNpemUgb2YgcHJvamVjdHMgSSBoYXZlIHdvcmtlZCBvbiBteXNlbGYsIEkgY2VydGFpbmx5IHNlZSBpdHMgYWR2YW50YWdlIHdoZW4gd29ya2luZyBvbiBsYXJnZXIgcHJvamVjdHMgYXMgd2VsbCBhcyB3aXRoIGEgdGVhbS4nLFxuICAgICAgZGlyZWN0aW9uczogJ1BsZWFzZSBOb3RlOiBObyBVSSB3YXMgY3JlYXRlZCBmb3IgdGhpcyBwcm9qZWN0IGFuZCBhbGwgZGVidWdnaW5nIHdhcyBkb25lIHdpdGhpbiB0aGUgSURFIHVzaW5nIHRlc3RzLicsXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiAnQ2hlayBMaXN0JyxcbiAgICAgIHVybDogJ2h0dHBzOi8vcnNnZXJyaXNoLmdpdGh1Yi5pby90b2RvLXByb2plY3QvJyxcbiAgICAgIGdpdDogJ2h0dHBzOi8vZ2l0aHViLmNvbS9SU0dlcnJpc2gvdG9kby1wcm9qZWN0JyxcbiAgICAgIGRlc2NyaXB0aW9uOiAnQSBUbyBEbyBMaXN0IEFwcC4gSSBoYWQgYSByZWFsbHkgZ29vZCB0aW1lIHdpdGggdGhpcyBvbmUgYXMgSSBtYW5hZ2VkIHRvIGdldCBpdCBhbGwgZG9uZSB3aXRoIG1pbmltYWwgaGVscCBmcm9tIGV4YW1wbGVzIGFuZCBtb3N0bHkgZnJvbSBteSBvd24gcmVzZWFyY2ggYW5kIHByb2JsZW0gc29sdmluZy4gVGhlIHBhbGV0dGUgaXMgY3JhcCwgaG93ZXZlciBJIGFtIHByb3VkIG9mIHRoZSBsYXlvdXQgYW5kIG92ZXJhbGwgZGVzaWduLiBJIHdpbGwgYmUgcmV2aXNpdGluZyB0aGlzIHRvIGFkZCBhIGZpcmViYXNlIGRhdGFzZSBhbGxvd2luZyBmb3IgcGVyc2lzdGVuY2UgYmV0d2VlbiBzZXNzaW9ucy4gSSB3aWxsIGFsc28gYmUgdXBkYXRpbmcgdGhlIHBhbGV0dGUuJyxcbiAgICAgIGRpcmVjdGlvbnM6ICdKdXN0IGxpa2UgdGhlIG90aGVyIG1pbGxpb24gdG9kbyBhcHBzIGFzcGlyaW5nIHdlYiBkZXZlbG9wZXJzIGhhdmUgZG9uZSwgeW91IGNhbiBhZGQgYSBwcm9qZWN0IG9uIHRoZSBsZWZ0LCBhbmQgdGhlbiBhZGQgdGFza3MgZm9yIHByb2plY3RzLidcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6ICdNYW1hcyBQaXp6YScsXG4gICAgICB1cmw6ICdodHRwczovL3JzZ2VycmlzaC5naXRodWIuaW8vcmVzdGF1cmFudC1wcm9qZWN0LycsXG4gICAgICBnaXQ6ICdodHRwczovL2dpdGh1Yi5jb20vUlNHZXJyaXNoL3Jlc3RhdXJhbnQtcHJvamVjdCcsXG4gICAgICBkZXNjcmlwdGlvbjogJ1RoaXMgd2FzIGFuIGVhcmx5IHByb2plY3QgSSB3b3JrZWQgb24sIGhvd2V2ZXIgSSBiZWxpZXZlIGl0cyBwdXJwb3NlIHdhcyB0byBnZXQgbWUgZmFtaWxpYXIgd2l0aCBXZWJwYWNrIHdoaWNoIGlzIGN1cnJlbnRseSBwYXJ0IG9mIG15IHByZWZlcnJlZCB0ZWNobm9sb2d5IHN0YWNrLCBhcyBsb25nIGFzIGl0IG1ha2VzIHNlbnNlIG9mIGNvdXJzZS4gVGhlIGFzc2lnbm1lbnQgd2FzIHRvIGNyZWF0ZSBhIGZha2UgcmVzdGF1cmFudCB3ZWJzaXRlLCBob3dldmVyIEkgcmVkZXNpZ25lZCBhIHdlYnNpdGUgZm9yIGEgcGl6emEgc2hvcCBvd25lZCBieSBhIGZyaWVuZC4gWW91IGNhbiBjaGVjayBvdXQgdGhlaXIgY3VycmVudCBzaXRlIGF0IGh0dHBzOi8vb3JpZ2luYWxtYW1hc3BpenphLmNvbS8uIFdobyBrbm93cywgbWF5YmUgdGhpcyBwcm9qZWN0IHdpbGwgYmVjb21lIGEgcGFpZCBnaWcgc29tZWRheSEnLFxuICAgICAgZGlyZWN0aW9uczogJ1RoaXMgc2l0ZSBpcyBub3QgZnVsbHkgcmVzcG9uc2l2ZSBhbmQgdGhlIGxheW91dCBicmVha3MgYXQgc21hbGxlciByZXNvbHV0aW9ucy4gSSBwbGFuIHRvIHJldmlzaXQgdGhpcyBvbmUgdG8gbWFrZSBhIG1vYmlsZSBsYXlvdXQgb2YgdGhlIHNpdGUgd2hpY2ggd2lsbCBiZSBkaXNwbGF5ZWQgdmlhIEphdmFzY3JpcHQgd2hlbiB0aGUgYXBwcyB3aWR0aCBnb2VzIGJlbG93IGEgY2VydGFpbiB3aWR0aC4nLFxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogJ1dlYXRoZXIgQXBwJyxcbiAgICAgIHVybDogJ2h0dHBzOi8vcnNnZXJyaXNoLmdpdGh1Yi5pby93ZWF0aGVyLWFwcC8nLFxuICAgICAgZ2l0OiAnaHR0cHM6Ly9naXRodWIuY29tL1JTR2VycmlzaC93ZWF0aGVyLWFwcCcsXG4gICAgICBkZXNjcmlwdGlvbjogXCJUaGUgcHVycG9zZSBvZiB0aGlzIHByb2plY3Qgd2FzIHRvIGdldCBmYW1pbGlhciB1c2luZyBhbiBBUEksIHByb21pc2VzIGFuZCBhc3luYy9hd2FpdCBmdW5jdGlvbnMuIFNwZWNpZmljYWxseSwgSSB1c2VkIHRoZSBPcGVuV2VhdGhlciBBUEkgdG8gcmV0cmlldmUgYW5kIGRpc3BsYXkgY3VycmVudCB3ZWF0aGVyIGluZm8uXCIsXG4gICAgICBkaXJlY3Rpb25zOiBcIkkgcmVsdWN0YW50bHkgcHV0IHRoaXMgb24gbXkgUG9ydGZvbGlvLCBidXQgb25seSBiZWNhdXNlIEkgYW0gbm90IHN1cmUgaG93IHRoZSBzdW5yaXNlIGFuZCBzdW5zZXQgdGltZXMgd2lsbCBkaXNwbGF5IGZvciBhbnlvbmUgb3V0c2lkZSBvZiB0aGUgVVMgRWFzdGVybiB0aW1lem9uZS4gV2hpbGUgSSBjb3VsZCBjZXJ0YWlubHkgd29yayB0aGlzIGlzc3VlIG91dCwgSSBkaWQgbm90IHdhbnQgdG8gZ2V0IGJvZ2dlZCBkb3duIHdpdGggYSBkZXRhaWwgdGhhdCByZWFsbHkgd2Fzbid0IHRoZSBmb2N1cyBvZiB0aGUgZXhlcmNpc2UuXCIsXG4gICAgfVxuICBdIFxuXG4gIGNvbnN0IHBvcnRFbGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgY29uc3QgcG9ydEdyaWQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblxuICBwb3J0RWxlLmlkID0gJ3BvcnRmb2xpby1ib2R5JztcbiAgcG9ydEdyaWQuaWQgPSAncG9ydC1ncmlkJztcblxuICBwb3J0Zm9saW8uZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgIGNvbnN0IHBvcnRVUkwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gICAgY29uc3QgcG9ydENhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb25zdCBwb3J0R3JhZGllbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb25zdCBwb3J0TmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnN0IHBvcnRHaXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gICAgY29uc3QgcG9ydERlc2MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb25zdCBwb3J0RGlyZWN0aW9ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gICAgcG9ydFVSTC5ocmVmID0gaXRlbS51cmw7XG4gICAgcG9ydENhcmQuY2xhc3NOYW1lID0gJ3BvcnQtY2FyZCc7XG4gICAgcG9ydENhcmQuaWQgPSBpdGVtLmdpdC5zdWJzdHJpbmcoKGl0ZW0uZ2l0LmluZGV4T2YoJ1JTR2VycmlzaC8nKSArIDEwKSwgaXRlbS5naXQubGVuZ3RoKTtcbiAgICBwb3J0R3JhZGllbnQuY2xhc3NOYW1lID0gJ3BvcnQtZ3JhZGllbnQnO1xuXG4gICAgcG9ydE5hbWUuY2xhc3NOYW1lID0gJ3BvcnQtbmFtZSc7XG4gICAgcG9ydE5hbWUudGV4dENvbnRlbnQgPSBpdGVtLm5hbWU7XG4gICAgcG9ydEdpdC5jbGFzc05hbWUgPSAncG9ydC1naXQnO1xuICAgIHBvcnRHaXQudGV4dENvbnRlbnQgPSAnQ2hlY2sgb3V0IHRoZSBzb3VyY2Ugb24gR2l0SHViJztcbiAgICBwb3J0R2l0LmhyZWYgPSBpdGVtLmdpdDtcbiAgICBwb3J0RGVzYy5jbGFzc05hbWUgPSAncG9ydC1kZXNjJztcbiAgICBwb3J0RGVzYy50ZXh0Q29udGVudCA9IGl0ZW0uZGVzY3JpcHRpb247XG4gICAgcG9ydERpcmVjdGlvbnMuY2xhc3NOYW1lID0gJ3BvcnQtZGlyZWN0aW9ucyc7XG4gICAgcG9ydERpcmVjdGlvbnMudGV4dENvbnRlbnQgPSBpdGVtLmRpcmVjdGlvbnM7XG5cbiAgICBwb3J0R3JhZGllbnQuYXBwZW5kKHBvcnROYW1lLCBwb3J0R2l0LCBwb3J0RGVzYywgcG9ydERpcmVjdGlvbnMpO1xuXG4gICAgcG9ydENhcmQuYXBwZW5kQ2hpbGQocG9ydEdyYWRpZW50KTtcblxuICAgIHBvcnRVUkwuYXBwZW5kQ2hpbGQocG9ydENhcmQpO1xuXG4gICAgcG9ydEdyaWQuYXBwZW5kQ2hpbGQocG9ydFVSTCk7XG4gIH0pXG5cbiAgcG9ydEVsZS5hcHBlbmRDaGlsZChwb3J0R3JpZCk7XG5cbiAgcmV0dXJuIHBvcnRFbGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBvcnRmb2xpbzsiLCJjb25zdCBSZXN1bWVIZWFkID0gKG5hbWUsIGVtYWlsLCBwaG9uZSwgZ2l0aHViLCBsaW5rZWRpbikgPT4ge1xuICBjb25zdCByZXNoZWFkRWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGNvbnN0IG5hbWVFbGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgY29uc3QgaW5mb0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gIGNvbnN0IGVtYWlsRWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGNvbnN0IHBob25lRWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGNvbnN0IGdpdGh1YkVsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBjb25zdCBsaW5rZWRpbkVsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gIGNvbnN0IGVtYWlsTGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgY29uc3QgcGhvbmVMaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICBjb25zdCBnaXRodWJMaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICBjb25zdCBsaW5rZWRpbkxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG5cbiAgZW1haWxMaW5rLmNsYXNzTmFtZSA9IFwicmVzLWxpbmtcIjtcbiAgZW1haWxMaW5rLmhyZWYgPSBcIm1haWx0bzpyb2JpbkBSb2JpblNpbGxzR2VycmlzaC5jb21cIlxuICBwaG9uZUxpbmsuY2xhc3NOYW1lID0gXCJyZXMtbGlua1wiO1xuICBwaG9uZUxpbmsuaHJlZiA9IFwidGVsOjE2MTA0MTM2MDYzXCI7XG4gIGdpdGh1YkxpbmsuY2xhc3NOYW1lID0gXCJyZXMtbGlua1wiO1xuICBnaXRodWJMaW5rLmhyZWYgPSBcImh0dHBzOi8vZ2l0aHViLmNvbS9SU0dlcnJpc2hcIjtcbiAgbGlua2VkaW5MaW5rLmNsYXNzTmFtZSA9IFwicmVzLWxpbmtcIjtcbiAgbGlua2VkaW5MaW5rLmhyZWYgPSBcImh0dHBzOi8vbGlua2VkaW4uY29tL2luL3JvYmluZ2VycmlzaFwiO1xuXG4gIHJlc2hlYWRFbGUuaWQgPSAnaGVhZC1jb250YWluZXInO1xuICBuYW1lRWxlLmlkID0gJ3VzZXItbmFtZSc7XG4gIGluZm9Db250YWluZXIuaWQgPSAnaW5mby1jb250YWluZXInO1xuICBlbWFpbEVsZS5jbGFzc05hbWUgPSAnaW5mby1lbGVtZW50JztcbiAgcGhvbmVFbGUuY2xhc3NOYW1lID0gJ2luZm8tZWxlbWVudCc7XG4gIGdpdGh1YkVsZS5jbGFzc05hbWUgPSAnaW5mby1lbGVtZW50JztcbiAgbGlua2VkaW5FbGUuY2xhc3NOYW1lID0gJ2luZm8tZWxlbWVudCc7XG5cbiAgbmFtZUVsZS50ZXh0Q29udGVudCA9IG5hbWU7XG4gIGVtYWlsRWxlLnRleHRDb250ZW50ID0gZW1haWw7XG4gIHBob25lRWxlLnRleHRDb250ZW50ID0gcGhvbmU7XG4gIGdpdGh1YkVsZS50ZXh0Q29udGVudCA9IGdpdGh1YjtcbiAgbGlua2VkaW5FbGUudGV4dENvbnRlbnQgPSBsaW5rZWRpbjtcblxuICBlbWFpbExpbmsuYXBwZW5kQ2hpbGQoZW1haWxFbGUpO1xuICBwaG9uZUxpbmsuYXBwZW5kQ2hpbGQocGhvbmVFbGUpO1xuICBnaXRodWJMaW5rLmFwcGVuZENoaWxkKGdpdGh1YkVsZSk7XG4gIGxpbmtlZGluTGluay5hcHBlbmRDaGlsZChsaW5rZWRpbkVsZSk7XG5cbiAgaW5mb0NvbnRhaW5lci5hcHBlbmQoZW1haWxMaW5rLCBwaG9uZUxpbmssIGdpdGh1YkxpbmssIGxpbmtlZGluTGluayk7XG4gIHJlc2hlYWRFbGUuYXBwZW5kKG5hbWVFbGUsIGluZm9Db250YWluZXIpO1xuXG4gIHJldHVybiByZXNoZWFkRWxlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBSZXN1bWVIZWFkOyIsImNvbnN0IEVkdWNhdGlvbldyYXBwZXIgPSAoc05hbWUsIGROYW1lLCBkYXRlcywgZGVzYykgPT4ge1xuICBjb25zdCB3cmFwcGVyRWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgY29uc3Qgc2Nob29sTmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBjb25zdCBkZWdyZWVOYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGNvbnN0IGRhdGVSYW5nZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBcbiAgc2Nob29sTmFtZS50ZXh0Q29udGVudCA9IHNOYW1lO1xuICBkZWdyZWVOYW1lLnRleHRDb250ZW50ID0gZE5hbWU7XG4gIGRhdGVSYW5nZS50ZXh0Q29udGVudCA9IGRhdGVzO1xuXG4gIHNjaG9vbE5hbWUuY2xhc3NOYW1lID0gXCJzZWN0aW9uLW9wZW5lclwiO1xuICBkZWdyZWVOYW1lLmNsYXNzTmFtZSA9IFwic2VjdGlvbi1oZWFkZXJcIjtcbiAgZGF0ZVJhbmdlLmNsYXNzTmFtZSA9IFwiZGF0ZS1yYW5nZVwiO1xuXG4gIHdyYXBwZXJFbGUuY2xhc3NOYW1lID0gXCJlZGV4LXNlY3Rpb25cIjtcblxuICB3cmFwcGVyRWxlLmFwcGVuZChzY2hvb2xOYW1lLCBkZWdyZWVOYW1lLCBkYXRlUmFuZ2UpO1xuXG4gIGlmKGRlc2MpIHtcbiAgICBjb25zdCBkZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGRlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gZGVzYztcbiAgICBkZXNjcmlwdGlvbi5jbGFzc05hbWUgPSBcInNlY3Rpb24tZGVzY3JpcHRpb25cIjtcbiAgICB3cmFwcGVyRWxlLmFwcGVuZENoaWxkKGRlc2NyaXB0aW9uKTtcbiAgfVxuXG4gIHJldHVybiB3cmFwcGVyRWxlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBFZHVjYXRpb25XcmFwcGVyOyIsImNvbnN0IEV4cGVyaWVuY2VXcmFwcGVyID0gKHBOYW1lLCBjTmFtZSwgZGF0ZXMsIGRlc2MpID0+IHtcbiAgY29uc3Qgd3JhcHBlckVsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gIGNvbnN0IHBvc2l0aW9uTmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBjb25zdCBjb21wYW55TmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBjb25zdCBkYXRlUmFuZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgY29uc3QgZGVzY3JpcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblxuICBwb3NpdGlvbk5hbWUudGV4dENvbnRlbnQgPSBwTmFtZTtcbiAgY29tcGFueU5hbWUudGV4dENvbnRlbnQgPSBjTmFtZTtcbiAgZGF0ZVJhbmdlLnRleHRDb250ZW50ID0gZGF0ZXM7XG4gIGRlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gZGVzYztcblxuICBwb3NpdGlvbk5hbWUuY2xhc3NOYW1lID0gXCJzZWN0aW9uLW9wZW5lclwiO1xuICBjb21wYW55TmFtZS5jbGFzc05hbWUgPSBcInNlY3Rpb24taGVhZGVyXCI7XG4gIGRhdGVSYW5nZS5jbGFzc05hbWUgPSBcImRhdGUtcmFuZ2VcIjtcbiAgZGVzY3JpcHRpb24uY2xhc3NOYW1lID0gXCJzZWN0aW9uLWRlc2NyaXB0aW9uXCI7XG5cbiAgd3JhcHBlckVsZS5jbGFzc05hbWUgPSBcImVkZXgtc2VjdGlvblwiO1xuXG4gIHdyYXBwZXJFbGUuYXBwZW5kKHBvc2l0aW9uTmFtZSwgY29tcGFueU5hbWUsIGRhdGVSYW5nZSwgZGVzY3JpcHRpb24pO1xuXG4gIHJldHVybiB3cmFwcGVyRWxlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBFeHBlcmllbmNlV3JhcHBlcjsiLCJpbXBvcnQgUmVzdW1lSGVhZCBmcm9tICcuL3Jlcy1oZWFkLmpzJztcbmltcG9ydCBSZXN1bWVTdW1tYXJ5IGZyb20gJy4vcmVzLXN1bW1hcnkuanMnO1xuaW1wb3J0IFJlc3VtZVNraWxscyBmcm9tICcuL3Jlcy1za2lsbHMuanMnO1xuaW1wb3J0IFJlc3VtZUVkdWNhdGlvbiBmcm9tICcuL3Jlcy1lZHVjYXRpb24uanMnO1xuaW1wb3J0IFJlc3VtZUV4cGVyaWVuY2UgZnJvbSAnLi9yZXMtZXhwZXJpZW5jZS5qcyc7XG5cbmNvbnN0IFJlc3VtZSA9ICgpID0+IHtcbiAgY29uc3QgbmFtZSA9IFwiUm9iaW4gR2VycmlzaFwiO1xuICBjb25zdCBlbWFpbCA9IFwicm9iaW5AUm9iaW5TaWxsc0dlcnJpc2guY29tXCI7XG4gIGNvbnN0IHBob25lID0gXCI2MTAtNDEzLTYwNjNcIjtcbiAgY29uc3QgZ2l0aHViID0gXCJodHRwczovL2dpdGh1Yi5jb20vUlNHZXJyaXNoXCI7XG4gIGNvbnN0IGxpbmtlZGluID0gXCJodHRwczovL2xpbmtlZGluLmNvbS9pbi9yb2JpbmdlcnJpc2hcIjtcblxuICBjb25zdCBzdW1tYXJ5MSA9IFwiQ29tcG9zaXRlIEVuZ2luZWVyIGZyb20gdGhlIHJhY2luZywgYWVyb3NwYWNlIGFuZCBkZWZlbnNlIGluZHVzdHJpZXMgd2l0aCBzdHJvbmcgZGVzaXJlIHRvIHB1cnN1ZSBhIGNhcmVlciBpbiBzb2Z0d2FyZSBvciB3ZWIgZGV2ZWxvcG1lbnRcIjtcbiAgY29uc3Qgc3VtbWFyeTIgPSBcIkRldmVsb3BlZCBrZXkgZ2VuZXJhbCBza2lsbHMgaW4gcGFzdCBwb3NpdGlvbnMgIHN1Y2ggYXMgbWFuYWdlbWVudCwgY3VzdG9tZXIgc2VydmljZSwgc3Ryb25nIGNvbW11bmljYXRpb24gYW5kIGxvZ2ljYWwgcHJvYmxlbSBzb2x2aW5nXCI7XG4gIGNvbnN0IHN1bW1hcnkzID0gXCJXZWIgRGV2ZWxvcGVyIHRyYWluZWQgaW4gSFRNTDUsIENTUzMgYW5kIEphdmFzY3JpcHRcIlxuICBjb25zdCBzdW1tYXJ5NCA9IFwiQWRkaXRpb25hbCBleHBlcmllbmNlIGluIEdpdEh1YiwgV2VicGFjayB3aXRoIHZhcmlvdXMgcGx1Z2lucyBhbmQgU1FMXCJcblxuICBjb25zdCBza2lsbHMgPSBbJ0Z1bGwtU3RhY2sgRGV2ZWxvcG1lbnQnLCAnV2VicGFjaycsICdHaXRodWInLCAnTm9kZS5qcycsICdFeHByZXNzLmpzJywgJ1JlYWN0LmpzJywgJ2pRdWVyeScsICdQSFAnLCAnU1FMJ107XG4gIFxuICBjb25zdCBlZHVjYXRpb24xID0ge1xuICAgIHNuYW1lOiBcIlRoZSBPZGluIFByb2plY3RcIixcbiAgICBkbmFtZTogXCJDZXJ0aWZpY2F0ZSwgRnVsbCBTdGFjayBXZWIgRGV2ZWxvcG1lbnRcIixcbiAgICBkYXRlczogXCJBcHIgMjAyMiAtIEp1biAyMDIyXCIsXG4gICAgZGVzYzogXCJUaGVPZGluUHJvamVjdC5jb20gLSBUaGUgT2RpbiBQcm9qZWN0IHByb3ZpZGVzIGEgZnJlZSBvcGVuIHNvdXJjZSBjb2RpbmcgY3VycmljdWx1bSB0aGF0IGNhbiBiZSB0YWtlbiBlbnRpcmVseSBvbmxpbmUuIFRoZSBjdXJyaWN1bHVtIGlzIG1ldGljdWxvdXNseSBjdXJhdGVkIHRvIGVuc3VyZSB0aGUgY29udGVudCBpcyB1cC10by1kYXRlIGJ5IGEgdGVhbSBvZiBkZWRpY2F0ZWQgdm9sdW50ZWVycy5cIlxuICB9XG5cbiAgY29uc3QgZWR1Y2F0aW9uMiA9IHtcbiAgICBzbmFtZTogXCJSZWFkaW5nIEFyZWEgQ29tbXVuaXR5IENvbGxlZ2VcIixcbiAgICBkbmFtZTogXCJBc3NvY2lhdGUgb2YgQnVzaW5lc3MgTWFuYWdlbWVudFwiLFxuICAgIGRhdGVzOiBcIkdyYWR1YXRlZCBKdW5lIDIwMTJcIlxuICB9XG5cbiAgY29uc3QgZXhwZXJpZW5jZTEgPSB7XG4gICAgcG5hbWU6IFwiQ29tcG9zaXRlIEZhYnJpY2F0b3JcIixcbiAgICBjbmFtZTogXCJDb21wb3NpdGUgUmVzb3VyY2VzXCIsXG4gICAgZGF0ZXM6IFwiSmFuIDIwMjEgLSBNYXIgMjAyMlwiLFxuICAgIGRlc2M6IFwiUmVzcG9uc2liaWxpdGllcyBpbmNsdWRlIGNvbXBvc2l0ZSBmYWJyaWNhdGlvbiwgbWFudWFsIG1hY2hpbmluZywgYW5kIGhhbmRsaW5nIG9jY2FzaW9uYWwgcmVzZWFyY2ggYW5kIGRldmVsb3BtZW50IHByb2plY3RzXCJcbiAgfVxuXG4gIGNvbnN0IGV4cGVyaWVuY2UyID0ge1xuICAgIHBuYW1lOiBcIkludmVudG9yeSBNYW5hZ2VyXCIsXG4gICAgY25hbWU6IFwiTXVsdGltYXRpYyBJbmMuXCIsXG4gICAgZGF0ZXM6IFwiTWF5IDIwMTkgLSBNYXkgMjAyMFwiLFxuICAgIGRlc2M6IFwiUmVzcG9uc2liaWxpdGllcyBpbmNsdWRlIGN1c3RvbWVyIHN1cHBvcnQsIGludmVudG9yeSBtYW5hZ2VtZW50IG9mIGFsbCBpbi1ob3VzZSBHVDMgYW5kIEdUNCBPRU0gcGFydHMgZm9yIHRoZSBVUyBjdXN0b21lciBzdXBwcG9ydCBwcm9ncmFtLCBhbmQgb2NjYXNpb25hbCB0cmF2ZWwgdG8gcmFjZSBldmVudHNcIlxuICB9XG5cbiAgY29uc3QgZXhwZXJpZW5jZTMgPSB7XG4gICAgcG5hbWU6IFwiUHJvamVjdCBFbmdpbmVlclwiLFxuICAgIGNuYW1lOiBcIkNvbXBvc2l0ZSBSZXNvdXJjZXNcIixcbiAgICBkYXRlczogXCJNYXkgMjAxOCAtIE1heSAyMDE5XCIsXG4gICAgZGVzYzogXCJQcm9qZWN0IEVuZ2luZWVyIHdpdGggZm9jdXMgaW4gcXVvdGluZyBwb3RlbnRpYWwgd29yayBhbmQgZGVzaWduaW5nIGNvbXBvc2l0ZSBwYXJ0c1wiXG4gIH1cblxuICBjb25zdCBleHBlcmllbmNlNCA9IHtcbiAgICBwbmFtZTogXCJQdXJjaGFzZXJcIixcbiAgICBjbmFtZTogXCJSaWxleSBUZWNobm9sb2dpZXNcIixcbiAgICBkYXRlczogXCJEZWMgMjAxNiAtIE1heSAyMDE4XCIsXG4gICAgZGVzYzogXCJSZXNwb25zaWJpbGl0aWVzIGluY2x1ZGUgYnV0IGFyZSBub3QgbGltaXRlZCB0byBzb3VyY2luZyBtYXRlcmlhbHMsIGNyZWF0aW5nIGFuZCBzdWJtaXR0aW5nIHB1cmNoYXNlIG9yZGVycywgcmVjZWl2aW5nIGludmVudG9yeSwgbWFpbnRhaW5pbmcgaW52ZW50b3J5LCBjcmVhdGluZyBhbmQgZWRpdGluZyBCT00ncyBhbmQgb2NjYXNpb25hbHkgdHJhdmVsaW5nIHRvIHJhY2UgZXZlbnRzXCJcbiAgfVxuXG4gIGNvbnN0IHJlc3VtZUVsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gIHJlc3VtZUVsZS5pZCA9IFwicmVzdW1lLWJvZHlcIjtcblxuICByZXN1bWVFbGUuYXBwZW5kQ2hpbGQoUmVzdW1lSGVhZChuYW1lLCBlbWFpbCwgcGhvbmUsIGdpdGh1YiwgbGlua2VkaW4pKTtcbiAgcmVzdW1lRWxlLmFwcGVuZENoaWxkKFJlc3VtZVN1bW1hcnkoc3VtbWFyeTEsIHN1bW1hcnkyLCBzdW1tYXJ5Mywgc3VtbWFyeTQpKTtcbiAgcmVzdW1lRWxlLmFwcGVuZENoaWxkKFJlc3VtZVNraWxscyhza2lsbHMpKTtcbiAgcmVzdW1lRWxlLmFwcGVuZENoaWxkKFJlc3VtZUVkdWNhdGlvbihlZHVjYXRpb24xLCBlZHVjYXRpb24yKSk7XG4gIHJlc3VtZUVsZS5hcHBlbmRDaGlsZChSZXN1bWVFeHBlcmllbmNlKGV4cGVyaWVuY2UxLCBleHBlcmllbmNlMiwgZXhwZXJpZW5jZTMsIGV4cGVyaWVuY2U0KSk7XG4gIHJldHVybiByZXN1bWVFbGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlc3VtZTsiLCJjb25zdCBSZXN1bWVTdW1tYXJ5ID0gKHN1bTEsIHN1bTIsIHN1bTMsIHN1bTQpID0+IHtcbiAgY29uc3Qgc3VtbWFyeUVsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gIGNvbnN0IHN1bW1hcnlUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBjb25zdCBzdW1tYXJ5TGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7XG4gIGNvbnN0IHN1bW1hcnkxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgY29uc3Qgc3VtbWFyeTIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICBjb25zdCBzdW1tYXJ5MyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gIGNvbnN0IHN1bW1hcnk0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgXG4gIHN1bW1hcnlFbGUuaWQgPSBcInN1bW1hcnktY29udGFpbmVyXCI7XG5cbiAgc3VtbWFyeVRpdGxlLnRleHRDb250ZW50ID0gXCJTdW1tYXJ5XCI7XG4gIHN1bW1hcnlUaXRsZS5pZCA9IFwic3VtbWFyeS10aXRsZVwiO1xuICBzdW1tYXJ5VGl0bGUuY2xhc3NOYW1lID0gXCJzZWN0aW9uLXRpdGxlXCI7XG5cbiAgc3VtbWFyeTEudGV4dENvbnRlbnQgPSBzdW0xO1xuICBzdW1tYXJ5MS5jbGFzc05hbWUgPSAnc3VtLWl0ZW0nO1xuICBzdW1tYXJ5Mi50ZXh0Q29udGVudCA9IHN1bTI7XG4gIHN1bW1hcnkyLmNsYXNzTmFtZSA9ICdzdW0taXRlbSc7XG4gIHN1bW1hcnkzLnRleHRDb250ZW50ID0gc3VtMztcbiAgc3VtbWFyeTMuY2xhc3NOYW1lID0gJ3N1bS1pdGVtJztcbiAgc3VtbWFyeTQudGV4dENvbnRlbnQgPSBzdW00O1xuICBzdW1tYXJ5NC5jbGFzc05hbWUgPSAnc3VtLWl0ZW0nO1xuXG4gIHN1bW1hcnlMaXN0LmFwcGVuZChzdW1tYXJ5MSwgc3VtbWFyeTIsIHN1bW1hcnkzLCBzdW1tYXJ5NCk7XG4gIHN1bW1hcnlFbGUuYXBwZW5kKHN1bW1hcnlUaXRsZSwgc3VtbWFyeUxpc3QpO1xuXG4gIHJldHVybiBzdW1tYXJ5RWxlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBSZXN1bWVTdW1tYXJ5OyIsImNvbnN0IFJlc3VtZVNraWxscyA9IChza2lsbExpc3QpID0+IHtcbiAgY29uc3Qgc2tpbGxzRWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGNvbnN0IHNraWxsc1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGNvbnN0IHNraWxsc1dyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgY29uc3Qgc2tpbGxzUG9zaXRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblxuICBza2lsbHNFbGUuaWQgPSBcInNraWxscy1jb250YWluZXJcIlxuXG4gIHNraWxsc1RpdGxlLmNsYXNzTmFtZSA9IFwic2VjdGlvbi10aXRsZVwiO1xuICBza2lsbHNUaXRsZS5pZCA9IFwic2tpbGxzLXRpdGxlXCI7XG4gIHNraWxsc1RpdGxlLnRleHRDb250ZW50ID0gXCJTa2lsbHNcIjtcblxuICBza2lsbExpc3QuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBza2lsbERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHNraWxsRGl2LnRleHRDb250ZW50ID0gaXRlbTtcbiAgICBza2lsbERpdi5pZCA9IGBza2lsbC0ke2luZGV4fWBcblxuICAgIGlmIChpbmRleCA8IHNraWxsTGlzdC5sZW5ndGggLSAxKSB7XG4gICAgICBjb25zdCBza2lsbFNlcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgc2tpbGxTZXAudGV4dENvbnRlbnQgPSBcIuKAolwiO1xuICAgICAgc2tpbGxTZXAuaWQgPSBgc2VwLSR7aW5kZXh9YDtcbiAgICAgIHNraWxsc1dyYXBwZXIuYXBwZW5kKHNraWxsRGl2LCBza2lsbFNlcCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNraWxsc1dyYXBwZXIuYXBwZW5kQ2hpbGQoc2tpbGxEaXYpO1xuICAgIH1cbiAgfSk7XG5cbiAgc2tpbGxzV3JhcHBlci5pZCA9IFwic2tpbGxzLXdyYXBwZXJcIjtcblxuICBza2lsbHNQb3NpdGlvbi5hcHBlbmRDaGlsZChza2lsbHNXcmFwcGVyKTtcbiAgc2tpbGxzUG9zaXRpb24uaWQgPSBcInNraWxscy1wb3NpdGlvblwiO1xuXG4gIHNraWxsc0VsZS5hcHBlbmQoc2tpbGxzVGl0bGUsIHNraWxsc1Bvc2l0aW9uKTtcblxuICByZXR1cm4gc2tpbGxzRWxlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBSZXN1bWVTa2lsbHM7IiwiaW1wb3J0IEVkdWNhdGlvbldyYXBwZXIgZnJvbSAnLi9lZHUtd3JhcHBlci5qcyc7XG5cbmNvbnN0IFJlc3VtZUVkdWNhdGlvbiA9IChlZHUxLCBlZHUyKSA9PiB7XG4gIGNvbnN0IGVkdWNhdGlvbkVsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBjb25zdCBlZHVjYXRpb25UaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gIGVkdWNhdGlvblRpdGxlLnRleHRDb250ZW50ID0gXCJFZHVjYXRpb25cIjtcbiAgZWR1Y2F0aW9uVGl0bGUuY2xhc3NOYW1lID0gXCJzZWN0aW9uLXRpdGxlXCI7XG5cbiAgZWR1Y2F0aW9uRWxlLmlkID0gXCJlZHVjYXRpb24tY29udGFpbmVyXCI7XG4gIFxuICBlZHVjYXRpb25FbGUuYXBwZW5kQ2hpbGQoZWR1Y2F0aW9uVGl0bGUpO1xuICBlZHVjYXRpb25FbGUuYXBwZW5kQ2hpbGQoRWR1Y2F0aW9uV3JhcHBlcihlZHUxLnNuYW1lLCBlZHUxLmRuYW1lLCBlZHUxLmRhdGVzLCBlZHUxLmRlc2MpKTtcbiAgZWR1Y2F0aW9uRWxlLmFwcGVuZENoaWxkKEVkdWNhdGlvbldyYXBwZXIoZWR1Mi5zbmFtZSwgZWR1Mi5kbmFtZSwgZWR1Mi5kYXRlcywgZWR1Mi5kZXNjKSk7XG5cbiAgcmV0dXJuIGVkdWNhdGlvbkVsZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVzdW1lRWR1Y2F0aW9uOyIsImltcG9ydCBFeHBlcmllbmNlV3JhcHBlciBmcm9tICcuL2V4cC13cmFwcGVyLmpzJztcblxuY29uc3QgUmVzdW1lRXhwZXJpZW5jZSA9IChleHAxLCBleHAyLCBleHAzLCBleHA0KSA9PiB7XG4gIGNvbnN0IGV4cGVyaWVuY2VFbGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgY29uc3QgZXhwZXJpZW5jZVRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgZXhwZXJpZW5jZVRpdGxlLnRleHRDb250ZW50ID0gXCJFeHBlcmllbmNlXCI7XG4gIGV4cGVyaWVuY2VUaXRsZS5jbGFzc05hbWUgPSBcInNlY3Rpb24tdGl0bGVcIjtcblxuICBleHBlcmllbmNlRWxlLmFwcGVuZENoaWxkKGV4cGVyaWVuY2VUaXRsZSk7XG4gIGV4cGVyaWVuY2VFbGUuYXBwZW5kQ2hpbGQoRXhwZXJpZW5jZVdyYXBwZXIoZXhwMS5wbmFtZSwgZXhwMS5jbmFtZSwgZXhwMS5kYXRlcywgZXhwMS5kZXNjKSk7XG4gIGV4cGVyaWVuY2VFbGUuYXBwZW5kQ2hpbGQoRXhwZXJpZW5jZVdyYXBwZXIoZXhwMi5wbmFtZSwgZXhwMi5jbmFtZSwgZXhwMi5kYXRlcywgZXhwMi5kZXNjKSk7XG4gIGV4cGVyaWVuY2VFbGUuYXBwZW5kQ2hpbGQoRXhwZXJpZW5jZVdyYXBwZXIoZXhwMy5wbmFtZSwgZXhwMy5jbmFtZSwgZXhwMy5kYXRlcywgZXhwMy5kZXNjKSk7XG4gIGV4cGVyaWVuY2VFbGUuYXBwZW5kQ2hpbGQoRXhwZXJpZW5jZVdyYXBwZXIoZXhwNC5wbmFtZSwgZXhwNC5jbmFtZSwgZXhwNC5kYXRlcywgZXhwNC5kZXNjKSk7XG5cbiAgcmV0dXJuIGV4cGVyaWVuY2VFbGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlc3VtZUV4cGVyaWVuY2U7Il0sIm5hbWVzIjpbInNpemVTdGF0ZSIsInRvZ2dsZUNvbnRhY3QiLCJjb250YWN0RWxlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwic3R5bGUiLCJ2aXNpYmlsaXR5Iiwic2hvd1BvcnRmb2xpbyIsInJlc3VtZSIsImhlYWRlciIsImhlYWRlckxvZ28iLCJyZW1vdmUiLCJhZnRlciIsInBvcnRFbGUiLCJjcmVhdGVFbGVtZW50IiwicG9ydEdyaWQiLCJpZCIsIm5hbWUiLCJ1cmwiLCJnaXQiLCJkZXNjcmlwdGlvbiIsImRpcmVjdGlvbnMiLCJmb3JFYWNoIiwiaXRlbSIsInBvcnRVUkwiLCJwb3J0Q2FyZCIsInBvcnRHcmFkaWVudCIsInBvcnROYW1lIiwicG9ydEdpdCIsInBvcnREZXNjIiwicG9ydERpcmVjdGlvbnMiLCJocmVmIiwiY2xhc3NOYW1lIiwic3Vic3RyaW5nIiwiaW5kZXhPZiIsImxlbmd0aCIsInRleHRDb250ZW50IiwiYXBwZW5kIiwiYXBwZW5kQ2hpbGQiLCJzaG93UmVzdW1lIiwicG9ydGZvbGlvIiwicmVzaXplRXZlbnRMaXN0ZW5lciIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJub2RlTGlzdCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJza2lsbHNXcmFwcGVyIiwic2tpbGwzIiwic2tpbGw2IiwiYnVsbGV0MSIsImJ1bGxldDIiLCJpbnNlcnRCZWZvcmUiLCJpbml0aWFsTG9hZCIsInNOYW1lIiwiZE5hbWUiLCJkYXRlcyIsImRlc2MiLCJ3cmFwcGVyRWxlIiwic2Nob29sTmFtZSIsImRlZ3JlZU5hbWUiLCJkYXRlUmFuZ2UiLCJwTmFtZSIsImNOYW1lIiwicG9zaXRpb25OYW1lIiwiY29tcGFueU5hbWUiLCJyZXN1bWVFbGUiLCJlbWFpbCIsInBob25lIiwiZ2l0aHViIiwibGlua2VkaW4iLCJyZXNoZWFkRWxlIiwibmFtZUVsZSIsImluZm9Db250YWluZXIiLCJlbWFpbEVsZSIsInBob25lRWxlIiwiZ2l0aHViRWxlIiwibGlua2VkaW5FbGUiLCJlbWFpbExpbmsiLCJwaG9uZUxpbmsiLCJnaXRodWJMaW5rIiwibGlua2VkaW5MaW5rIiwic3VtMSIsInN1bTIiLCJzdW0zIiwic3VtNCIsInN1bW1hcnlFbGUiLCJzdW1tYXJ5VGl0bGUiLCJzdW1tYXJ5TGlzdCIsInN1bW1hcnkxIiwic3VtbWFyeTIiLCJzdW1tYXJ5MyIsInN1bW1hcnk0Iiwic2tpbGxMaXN0Iiwic2tpbGxzRWxlIiwic2tpbGxzVGl0bGUiLCJza2lsbHNQb3NpdGlvbiIsImluZGV4Iiwic2tpbGxEaXYiLCJza2lsbFNlcCIsImVkdTEiLCJlZHUyIiwiZWR1Y2F0aW9uRWxlIiwiZWR1Y2F0aW9uVGl0bGUiLCJzbmFtZSIsImRuYW1lIiwiZXhwMSIsImV4cDIiLCJleHAzIiwiZXhwNCIsImV4cGVyaWVuY2VFbGUiLCJleHBlcmllbmNlVGl0bGUiLCJwbmFtZSIsImNuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==