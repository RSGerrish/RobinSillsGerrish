"use strict";(self.webpackChunkrobin_sills_gerrish=self.webpackChunkrobin_sills_gerrish||[]).push([[778],{514:(e,t,n)=>{n.d(t,{ZP:()=>i,Wp:()=>o,ii:()=>s});var a=n(337);function i(){const e=document.querySelector("#contact-container");e&&("visible"===e.style.visibility?e.style.visibility="hidden":e.style.visibility="visible")}function o(){const e=document.querySelector("#resume-body"),t=document.querySelector("header"),n=document.querySelector("#header-logo");e&&(e.remove(),n.style.visibility="visible",t.after((()=>{const e=document.createElement("div"),t=document.createElement("div");return e.id="portfolio-body",t.id="port-grid",[{name:"Memory Card Game",url:"https://rsgerrish.github.io/memory-card-game/",git:"https://github.com/RSGerrish/memory-card-game",description:"This is a Thundercats themed card game I did as an assignment to help in the process of learning how state and hooks work in React. I was able to get 90% of this done on my own, however I struggled when I managed to change state incorrectly and get myself caught in a difficult-to-debug render loop. I eventually had to check in on an example to understand where I was going wrong. In the end, I left with a fairly good grasp of using hooks and when and when to change state. I am also extremely pleased with the aesthetic of this project.",directions:"Click all of the characters without clicking any of them more than once. Each click will shuffle the group. Game resets when a character has been clicked for the second time and is subtly indicated by the score keeping."},{name:"TDD Exercise",url:"https://github.com/RSGerrish/tdd-practice",git:"https://github.com/RSGerrish/tdd-practice",description:"An exercise in using Jest and taking advantage of Test Driven Development. While I have found this to be tedious and counter intuitive for the size of projects I have worked on myself, I certainly see its advantage when working on larger projects as well as with a team.",directions:"Please Note: No UI was created for this project and all debugging was done within the IDE using tests."},{name:"Chek List",url:"https://rsgerrish.github.io/todo-project/",git:"https://github.com/RSGerrish/todo-project",description:"A To Do List App. I had a really good time with this one as I managed to get it all done with minimal help from examples and mostly from my own research and problem solving. The palette is crap, however I am proud of the layout and overall design. I will be revisiting this to add a firebase datase allowing for persistence between sessions. I will also be updating the palette.",directions:"Just like the other million todo apps aspiring web developers have done, you can add a project on the left, and then add tasks for projects."},{name:"Mamas Pizza",url:"https://rsgerrish.github.io/restaurant-project/",git:"https://github.com/RSGerrish/restaurant-project",description:"This was an early project I worked on, however I believe its purpose was to get me familiar with Webpack which is currently part of my preferred technology stack, as long as it makes sense of course. The assignment was to create a fake restaurant website, however I redesigned a website for a pizza shop owned by a friend. You can check out their current site at https://originalmamaspizza.com/. Who knows, maybe this project will become a paid gig someday!",directions:"This site is not fully responsive and the layout breaks at smaller resolutions. I plan to revisit this one to make a mobile layout of the site which will be displayed via Javascript when the apps width goes below a certain width."},{name:"Weather App",url:"https://rsgerrish.github.io/weather-app/",git:"https://github.com/RSGerrish/weather-app",description:"The purpose of this project was to get familiar using an API, promises and async/await functions. Specifically, I used the OpenWeather API to retrieve and display current weather info.",directions:"I reluctantly put this on my Portfolio, but only because I am not sure how the sunrise and sunset times will display for anyone outside of the US Eastern timezone. While I could certainly work this issue out, I did not want to get bogged down with a detail that really wasn't the focus of the exercise."}].forEach((e=>{const n=document.createElement("a"),a=document.createElement("div"),i=document.createElement("div"),o=document.createElement("div"),s=document.createElement("a"),r=document.createElement("div"),c=document.createElement("div");n.href=e.url,a.className="port-card",a.id=e.git.substring(e.git.indexOf("RSGerrish/")+10,e.git.length),i.className="port-gradient",o.className="port-name",o.textContent=e.name,s.className="port-git",s.textContent="Check out the source on GitHub",s.href=e.git,r.className="port-desc",r.textContent=e.description,c.className="port-directions",c.textContent=e.directions,i.append(o,s,r,c),a.appendChild(i),n.appendChild(a),t.appendChild(n)})),e.appendChild(t),e})()))}function s(){const e=document.querySelector("#portfolio-body"),t=document.querySelector("header"),n=document.querySelector("#header-logo");e&&(e.remove(),n.style.visibility="hidden",t.after((0,a.Z)()))}},337:(e,t,n)=>{n.d(t,{Z:()=>o});const a=(e,t,n,a)=>{const i=document.createElement("div"),o=document.createElement("div"),s=document.createElement("div"),r=document.createElement("div");if(o.textContent=e,s.textContent=t,r.textContent=n,o.className="section-opener",s.className="section-header",r.className="date-range",i.className="edex-section",i.append(o,s,r),a){const e=document.createElement("div");e.textContent=a,e.className="section-description",i.appendChild(e)}return i},i=(e,t,n,a)=>{const i=document.createElement("div"),o=document.createElement("div"),s=document.createElement("div"),r=document.createElement("div"),c=document.createElement("div");return o.textContent=e,s.textContent=t,r.textContent=n,c.textContent=a,o.className="section-opener",s.className="section-header",r.className="date-range",c.className="section-description",i.className="edex-section",i.append(o,s,r,c),i},o=()=>{const e=document.createElement("div");return e.id="resume-body",e.appendChild(((e,t,n,a,i)=>{const o=document.createElement("div"),s=document.createElement("div"),r=document.createElement("div"),c=document.createElement("div"),d=document.createElement("div"),l=document.createElement("div"),m=document.createElement("div"),p=document.createElement("a"),h=document.createElement("a"),u=document.createElement("a"),g=document.createElement("a");return p.className="res-link",p.href="mailto:robin@RobinSillsGerrish.com",h.className="res-link",h.href="tel:16104136063",u.className="res-link",u.href="https://github.com/RSGerrish",g.className="res-link",g.href="https://linkedin.com/in/robingerrish",o.id="head-container",s.id="user-name",r.id="info-container",c.className="info-element",d.className="info-element",l.className="info-element",m.className="info-element",s.textContent=e,c.textContent=t,d.textContent=n,l.textContent=a,m.textContent=i,p.appendChild(c),h.appendChild(d),u.appendChild(l),g.appendChild(m),r.append(p,h,u,g),o.append(s,r),o})("Robin Gerrish","robin@RobinSillsGerrish.com","610-413-6063","https://github.com/RSGerrish","https://linkedin.com/in/robingerrish")),e.appendChild(((e,t,n,a)=>{const i=document.createElement("div"),o=document.createElement("div"),s=document.createElement("ul"),r=document.createElement("li"),c=document.createElement("li"),d=document.createElement("li"),l=document.createElement("li");return i.id="summary-container",o.textContent="Summary",o.id="summary-title",o.className="section-title",r.textContent=e,r.className="sum-item",c.textContent=t,c.className="sum-item",d.textContent=n,d.className="sum-item",l.textContent=a,l.className="sum-item",s.append(r,c,d,l),i.append(o,s),i})("Composite Engineer from the racing, aerospace and defense industries with strong desire to pursue a career in software or web development","Developed key general skills in past positions  such as management, customer service, strong communication and logical problem solving","Web Developer trained in HTML5, CSS3 and Javascript","Additional experience in GitHub, Webpack with various plugins and SQL")),e.appendChild((e=>{const t=document.createElement("div"),n=document.createElement("div"),a=document.createElement("div"),i=document.createElement("div");return t.id="skills-container",n.className="section-title",n.id="skills-title",n.textContent="Skills",e.forEach(((e,t)=>{const n=document.createElement("div");n.textContent=e,n.id=`skill-${t}`,a.appendChild(n)})),a.id="skills-wrapper",i.appendChild(a),i.id="skills-position",t.append(n,i),t})(["Full-Stack Development","Webpack","Github","Node.js","Express.js","React.js","jQuery","PHP","SQL"])),e.appendChild(((e,t)=>{const n=document.createElement("div"),i=document.createElement("div");return i.textContent="Education",i.className="section-title",n.id="education-container",n.appendChild(i),n.appendChild(a(e.sname,e.dname,e.dates,e.desc)),n.appendChild(a(t.sname,t.dname,t.dates,t.desc)),n})({sname:"The Odin Project",dname:"Certificate, Full Stack Web Development",dates:"Apr 2022 - Jun 2022",desc:"TheOdinProject.com - The Odin Project provides a free open source coding curriculum that can be taken entirely online. The curriculum is meticulously curated to ensure the content is up-to-date by a team of dedicated volunteers."},{sname:"Reading Area Community College",dname:"Associate of Business Management",dates:"Graduated June 2012"})),e.appendChild(((e,t,n,a)=>{const o=document.createElement("div"),s=document.createElement("div");return s.textContent="Experience",s.className="section-title",o.appendChild(s),o.appendChild(i(e.pname,e.cname,e.dates,e.desc)),o.appendChild(i(t.pname,t.cname,t.dates,t.desc)),o.appendChild(i(n.pname,n.cname,n.dates,n.desc)),o.appendChild(i(a.pname,a.cname,a.dates,a.desc)),o})({pname:"Composite Fabricator",cname:"Composite Resources",dates:"Jan 2021 - Mar 2022",desc:"Responsibilities include composite fabrication, manual machining, and handling occasional research and development projects"},{pname:"Inventory Manager",cname:"Multimatic Inc.",dates:"May 2019 - May 2020",desc:"Responsibilities include customer support, inventory management of all in-house GT3 and GT4 OEM parts for the US customer suppport program, and occasional travel to race events"},{pname:"Project Engineer",cname:"Composite Resources",dates:"May 2018 - May 2019",desc:"Project Engineer with focus in quoting potential work and designing composite parts"},{pname:"Purchaser",cname:"Riley Technologies",dates:"Dec 2016 - May 2018",desc:"Responsibilities include but are not limited to sourcing materials, creating and submitting purchase orders, receiving inventory, maintaining inventory, creating and editing BOM's and occasionaly traveling to race events"})),e}}},e=>{e(e.s=514)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,